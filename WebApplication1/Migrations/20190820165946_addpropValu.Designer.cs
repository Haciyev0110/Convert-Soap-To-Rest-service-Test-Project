// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DAL;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TesdDemoDb))]
    [Migration("20190820165946_addpropValu")]
    partial class addpropValu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.FirstTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Insert_Date");

                    b.HasKey("Id");

                    b.ToTable("firstTables");
                });

            modelBuilder.Entity("WebApplication1.Models.SecondTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirstTabelId");

                    b.Property<int?>("FirstTableId");

                    b.Property<DateTime>("Insert_Date");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("FirstTableId");

                    b.ToTable("secondTables");
                });

            modelBuilder.Entity("WebApplication1.Models.SecondTable", b =>
                {
                    b.HasOne("WebApplication1.Models.FirstTable", "FirstTable")
                        .WithMany()
                        .HasForeignKey("FirstTableId");
                });
#pragma warning restore 612, 618
        }
    }
}
